name: Deploy

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and upload
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # You can add more, for any target you'd like!
        include:
          # Debug linux
          - target: x86_64-unknown-linux-gnu
            artifact: libsqore.so
            type: debug

          # Debug mac
          - target: x86_64-apple-darwin
            artifact: libsqore.dylib
            type: debug

          # Debug Windows
          - target: x86_64-pc-windows-gnu
            artifact: sqore.dll
            type: debug

          # Release linux
          - target: x86_64-unknown-linux-gnu
            artifact: libsqore.so
            type: release

          # Release mac
          - target: x86_64-apple-darwin
            artifact: libsqore.dylib
            type: release

          # Release windows
          - target: x86_64-pc-windows-gnu
            artifact: sqore.dll
            type: release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=$\{GITHUB_REF#refs/tags/\}" >> $GITHUB_ENV

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: matrix.type == 'release' # gotta be a better way?
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build Debug
        uses: actions-rs/cargo@v1
        if: matrix.type == 'debug'
        with:
          use-cross: true
          command: build
          args: --verbose --target ${{ matrix.target }}

      - name: Upload lib
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ matrix.artifact }}--${{ matrix.type }}
          if-no-files-found: error
          path: "target/${{ matrix.target }}/${{matrix.type}}/${{ matrix.artifact }}"
          overwrite: true
  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: relocate libs
        run: |
          echo "Hello there!"
                  - name: Download a Build Artifact
        
      - name: check download file
        uses: actions/download-artifact@v4.1.4
        with:
          # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
          path: $GITHUB_WORKSPACE
          # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
          pattern: "*sqore*"
          
          
    

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       ./squiggles_core_release.zip
